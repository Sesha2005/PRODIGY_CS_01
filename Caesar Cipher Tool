# === Caesar Cipher Tool ===
# Encrypts and decrypts text by shifting characters

def encrypt_caesar(text, shift):
    encrypted = ""
    for char in text:
        if char.isalpha():
            base = ord('A') if char.isupper() else ord('a')
            encrypted += chr((ord(char) - base + shift) % 26 + base)
        else:
            encrypted += char
    return encrypted

def decrypt_caesar(text, shift):
    return encrypt_caesar(text, -shift)

# --- Color codes ---
GREEN = '\033[92m'
YELLOW = '\033[93m'
CYAN = '\033[96m'
RESET = '\033[0m'

# --- Welcome Message and Initial Menu ---
print(f"{CYAN}\nüõ°Ô∏è Welcome to the Caesar Cipher Tool üõ°Ô∏è{RESET}")
print(f"{YELLOW}Encrypt and Decrypt your secrets, Roman-style!\n{RESET}")
print(f"{CYAN}Options:{RESET}")
print("  1. Encrypt a message")
print("  2. Decrypt a message")
print("  3. Exit\n")

# --- Main Loop ---
while True:
    choice = input("Enter your choice (1/2/3): ").strip()

    if choice == '3':
        print(f"{GREEN}üîí Exiting the Caesar Cipher Tool. Stay secure!{RESET}")
        break

    if choice not in ('1', '2'):
        print(f"{YELLOW}‚ö†Ô∏è Please enter a valid option (1/2/3).{RESET}")
        continue

    message = input("Enter your message: ")

    try:
        shift = int(input("Enter shift value (e.g., 3): "))
    except ValueError:
        print(f"{YELLOW}‚ö†Ô∏è Shift must be an integer. Try again.{RESET}")
        continue

    if choice == '1':
        result = encrypt_caesar(message, shift)
        print(f"{GREEN}üîê Encrypted Message: {result}{RESET}\n")
    else:
        result = decrypt_caesar(message, shift)
        print(f"{GREEN}üîì Decrypted Message: {result}{RESET}\n")

    # Ask if the user wants to continue
    again = input("Do you want to encrypt/decrypt another message? (y/n): ").strip().lower()
    if again != 'y':
        print(f"{GREEN}üëã Thank you for using the Caesar Cipher Tool!{RESET}")
        break
